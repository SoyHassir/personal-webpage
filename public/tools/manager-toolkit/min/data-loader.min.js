class ToolkitDataLoader{constructor(){this.data=[],this.categories=["estrategia-planeacion","finanzas-evaluacion","gestion-proyectos-riesgos","descubrimiento-cliente","analisis-datos-pronosticos","diseno-mejora-procesos","ideacion-validacion","gestion-talento-cultura","tecnologia-infraestructura"],this.loadedCount=0,this.totalFiles=this.categories.length,this.loadedCategories=new Set,this.loadingPromises=new Map}async loadAllData(){try{const t=this.categories.map(t=>this.loadCategoryData(t)),a=await Promise.all(t);return this.data=a.flat(),this.data}catch(t){throw console.error("❌ Error cargando datos:",t),t}}async loadCategoryOnDemand(t){if(this.loadedCategories.has(t))return this.data.filter(a=>a.category===t);if(this.loadingPromises.has(t))return await this.loadingPromises.get(t);const a=this.loadCategoryData(t);this.loadingPromises.set(t,a);try{const e=await a;return this.loadedCategories.add(t),this.loadingPromises.delete(t),e}catch(a){throw this.loadingPromises.delete(t),a}}async preloadCategories(t){const a=t.filter(t=>!this.loadedCategories.has(t)).map(t=>this.loadCategoryOnDemand(t));a.length>0&&await Promise.all(a)}async loadCategoryData(t){try{const a=await fetch(`data/${t}.json`);if(!a.ok)throw new Error(`HTTP error! status: ${a.status}`);const e=await a.json();return this.loadedCount++,e}catch(a){return console.error(`❌ Error cargando ${t}.json:`,a),[]}}getAllTools(){return this.data}async getToolsByCategory(t){if("Todos"===t){if(this.loadedCategories.size<this.categories.length){const t=this.categories.filter(t=>!this.loadedCategories.has(t));await this.preloadCategories(t)}return this.data}return this.loadedCategories.has(t)||await this.loadCategoryOnDemand(t),this.data.filter(a=>a.category===t)}getUniqueCategories(){const t=[...new Set(this.data.map(t=>t.category))];return t.sort(),["Todos",...t]}getToolById(t){return this.data.find(a=>a.id===t)}isDataLoaded(){return this.data.length>0}isCategoryLoaded(t){return this.loadedCategories.has(t)}getLoadStats(){return{totalTools:this.data.length,loadedFiles:this.loadedCount,totalFiles:this.totalFiles,categories:this.getUniqueCategories().length-1,loadedCategories:this.loadedCategories.size,pendingLoads:this.loadingPromises.size}}cleanupUnusedCategories(t=[]){const a=new Set(["Todos",...t]);this.categories.filter(t=>!a.has(t)).forEach(t=>{this.loadedCategories.has(t)&&(this.loadedCategories.delete(t),this.data=this.data.filter(a=>a.category!==t))})}}window.ToolkitDataLoader=ToolkitDataLoader;