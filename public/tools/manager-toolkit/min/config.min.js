const ToolkitConfig={lazyLoading:{enabled:!0,initialCategories:["estrategia-planeacion","finanzas-evaluacion"],preloadAdjacent:!0,cacheTimeout:3e5,maxCachedCategories:3},performance:{showIndicator:!0,indicatorTimeout:7e3,animationDelay:2e3,debounceDelay:300},ui:{showLoadingStates:!0,showCategoryIndicators:!0,smoothTransitions:!0,autoHidePerformanceIndicator:!0},cache:{enabled:!0,strategy:"lru",maxSize:50},api:{timeout:3e4,retryAttempts:3,retryDelay:1e3},animations:{cardDelay:100,modalTransition:300,fadeInDuration:600},debug:{enabled:!1,logLevel:"info",showPerformanceLogs:!0,showCacheLogs:!1}};function getConfig(e){const o=e.split(".");let n=ToolkitConfig;for(const e of o){if(!n||"object"!=typeof n||!(e in n))return;n=n[e]}return n}function updateConfig(e,o){const n=e.split(".");let t=ToolkitConfig;for(let e=0;e<n.length-1;e++)n[e]in t||(t[n[e]]={}),t=t[n[e]];t[n[n.length-1]]=o}function log(e,o,...n){const t=getConfig("debug.enabled"),i=getConfig("debug.logLevel");if(!t)return;const a={error:0,warn:1,info:2,debug:3};if((a[e]||0)<=(a[i]||0)){const t="[Manager Toolkit]";switch(e){case"error":console.error(t,o,...n);break;case"warn":console.warn(t,o,...n);break;case"info":console.info(t,o,...n);break;case"debug":console.debug(t,o,...n)}}}function measurePerformance(e,o){return async(...n)=>{const t=performance.now();try{const i=await o(...n),a=performance.now()-t;return getConfig("debug.showPerformanceLogs")&&log("info",`${e} completado en ${Math.round(a)}ms`),i}catch(o){const n=performance.now()-t;throw log("error",`${e} falló después de ${Math.round(n)}ms:`,o),o}}}function debounce(e,o){let n;return function(...t){clearTimeout(n),n=setTimeout(()=>{clearTimeout(n),e(...t)},o)}}function throttle(e,o){let n;return function(){const t=arguments,i=this;n||(e.apply(i,t),n=!0,setTimeout(()=>n=!1,o))}}window.ToolkitConfig=ToolkitConfig,window.getConfig=getConfig,window.updateConfig=updateConfig,window.log=log,window.measurePerformance=measurePerformance,window.debounce=debounce,window.throttle=throttle;const CONFIG={GEMINI_API_KEY:"AIzaSyB3DFJdEJZvXX5l9hfCXfKWoKdAUNx43Ec",GEMINI_API_URL:"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent"};function getGeminiApiKey(){return CONFIG.GEMINI_API_KEY}function getGeminiApiUrl(){const e=getGeminiApiKey();return`${CONFIG.GEMINI_API_URL}?key=${e}`}